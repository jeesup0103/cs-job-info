services:
  web:
    build: .
    expose:
      - "8000"
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=mysql+pymysql://root:${MYSQL_ROOT_PASSWORD}@db:3306/${MYSQL_DATABASE}
      - VIRTUAL_HOST=csjobinfo.com,www.csjobinfo.com
      - LETSENCRYPT_HOST=csjobinfo.com,www.csjobinfo.com
      - LETSENCRYPT_EMAIL=jeesup0103@naver.com
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  crawler:
    build: .
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=mysql+pymysql://root:${MYSQL_ROOT_PASSWORD}@db:3306/${MYSQL_DATABASE}
    command: ["sh", "./app/crawler/run_every_6h.sh"]
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    networks:
      - app-network
  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_HOST=%
    command: --default-authentication-plugin=caching_sha2_password
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  nginx-proxy:
    image: nginxproxy/nginx-proxy:latest
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx_vhost:/etc/nginx/conf.d
      - ./certs:/etc/nginx/certs:rw
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    networks:
      - app-network

  nginx-letsencrypt:
    image: nginxproxy/acme-companion:latest
    container_name: nginx-letsencrypt
    depends_on:
      - nginx-proxy
    environment:
      - DEFAULT_EMAIL=jeesup0103@naver.com
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs:rw
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
